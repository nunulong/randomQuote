(this.webpackJsonprandomQuote=this.webpackJsonprandomQuote||[]).push([[0],{12:function(t,e,n){t.exports=n(25)},21:function(t,e,n){},25:function(t,e,n){"use strict";n.r(e);var o,a=n(0),i=n.n(a),r=n(8),c=n.n(r),s=n(2),l=n(3);Object(l.c)(o||(o=Object(s.a)(["\n  @import url('https://fonts.googleapis.com/css?family=Raleway');\n\n  body {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: 'Raleway', sans-serif;\n  }\n"])));var h,u,d,g,m,w,f;n(21),n(22);const p=l.b.div(h||(h=Object(s.a)(["\n  transition: all 2s ease;\n  ",";\n"])),t=>{let{color:e}=t;return e&&Object(l.a)(u||(u=Object(s.a)(["\n    color: ","\n  "])),e)}),v=l.b.h1(d||(d=Object(s.a)(["\n  margin-top: 5vw;\n  font-size: 7vw;\n  color: white;\n"]))),b=l.b.div(g||(g=Object(s.a)(["\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  width: 80vw;\n  height: 60vh;\n  margin-right: auto;\n  margin-left: auto;\n  margin-top: 5vh;\n  background: white;\n  z-index: 1;\n  box-shadow: -5px 5px 5px rgba(68, 68, 68, 0.6);\n\n  p {\n    font-size: 2.5vw;\n    text-align: justify;\n    padding-left: 3vw;\n    padding-right: 3vw;\n    font-weight: bolder;\n  }\n\n  h3 {\n    text-align: right;\n    padding-right: 5vw;\n    font-size: 1.5vw;\n  }\n"]))),x=l.b.button(m||(m=Object(s.a)(["\n  ","; \n  color: black;\n  font-size: 1.25vw;\n  display: inlin-block;\n  border-radius: 5px;\n  padding: 0.75vh 0;\n  margin: 0.75vh 0;\n  width: 10vw;\n  &:hover {\n    cursor: pointer;\n  }\n"])),t=>{let{color:e}=t;return e&&Object(l.a)(w||(w=Object(s.a)(["\n    background: ",";\n  "])),e)}),y=l.b.div(f||(f=Object(s.a)(["\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n"])));var E=n(5),j=n.n(E),k=n(6),O=n(11);class q extends a.Component{constructor(t){super(t),this.fetchColor=()=>{const t="#000000".replace(/0/g,()=>(~~(16*Math.random())).toString(16));this.setState({color:t})},this.fetchQuote=async()=>{const t=await fetch("https://thesimpsonsquoteapi.glitch.me/quotes");if(200==t.status){const e=await t.json();this.setState({quote:e[0]})}else console.log("Error fetching quote")},this.handleClick=()=>{this.fetchQuote(),this.fetchColor()},this.handleTweet=()=>{window.open('https://twitter.com/intent/tweet?hashtags=Quote&text="'.concat(this.state.quote.quoteText,'" ').concat(this.state.quote.quoteAuthor))},this.state={quote:[],color:""}}componentDidMount(){this.fetchColor(),this.fetchQuote()}render(){document.body.setAttribute("style","background: ".concat(this.state.color,"; transition: background 2s ease;"));const t=this.state.color;return i.a.createElement(p,{color:this.state.color},i.a.createElement(v,null,"Random Quote"),i.a.createElement(b,null,i.a.createElement("div",null,i.a.createElement("p",null,i.a.createElement(j.a,{icon:k.a})," ",this.state.quote.quote," ",i.a.createElement(j.a,{icon:k.b})),i.a.createElement("h3",null,this.state.quote.character)),i.a.createElement(y,null,i.a.createElement(x,{color:this.state.color,onClick:this.handleClick},"Quote Me"),i.a.createElement(x,{color:this.state.color,onClick:this.handleTweet},"Tweet Me"))),i.a.createElement("a",{href:"https://github.com/nunulong/randomQuote"},i.a.createElement(j.a,{icon:O.a,size:"3x",style:Object.assign({},{color:t},{margin:"2rem"})})))}}var Q=q;class C extends a.Component{render(){return i.a.createElement("div",{className:"App"},i.a.createElement(Q,null))}}var z=C;const A=Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function M(t){navigator.serviceWorker.register(t).then(t=>{t.onupdatefound=()=>{const e=t.installing;e.onstatechange=()=>{"installed"===e.state&&(navigator.serviceWorker.controller?console.log("New content is available; please refresh."):console.log("Content is cached for offline use."))}}}).catch(t=>{console.error("Error during service worker registration:",t)})}c.a.render(i.a.createElement(z,null),document.getElementById("root")),function(){if("serviceWorker"in navigator){if(new URL("/randomQuote",window.location).origin!==window.location.origin)return;window.addEventListener("load",()=>{const t="".concat("/randomQuote","/service-worker.js");A?function(t){fetch(t).then(e=>{404===e.status||-1===e.headers.get("content-type").indexOf("javascript")?navigator.serviceWorker.ready.then(t=>{t.unregister().then(()=>{window.location.reload()})}):M(t)}).catch(()=>{console.log("No internet connection found. App is running in offline mode.")})}(t):M(t)})}}()}},[[12,1,2]]]);
//# sourceMappingURL=main.66e64e01.chunk.js.map